<%- include('../partials/admin/header') %>

<!-- Main Content -->
<main class="col-md-10 ms-sm-auto col-lg-10 px-md-4 mt-4">
  <div class="d-flex justify-content-between align-items-center mb-4 flex-wrap">
    <h1 class="mb-3 mb-md-0">Orders List</h1>
    <div class="d-flex gap-3">
      <!-- Search Form -->
      <form class="d-flex gap-2" id="searchForm" method="GET" action="/admin/orders">
        <div class="input-group">
          <input type="text" 
                 name="search"
                 id="searchInput" 
                 class="form-control" 
                 placeholder="Search orders..." 
                 value="<%= locals.searchQuery || '' %>"
                 style="width: 200px;">
          <select class="form-select" id="searchType" name="searchType" style="width: 150px;">
            <option value="orderId" <%= locals.searchType === 'orderId' ? 'selected' : '' %>>Order ID</option>
            <option value="customer" <%= locals.searchType === 'customer' ? 'selected' : '' %>>Customer</option>
            <option value="status" <%= locals.searchType === 'status' ? 'selected' : '' %>>Status</option>
            <option value="payment" <%= locals.searchType === 'payment' ? 'selected' : '' %>>Payment Method</option>
          </select>
          <button class="btn btn-primary" type="submit" id="searchBtn">
            <i class="bi bi-search"></i> Search
          </button>
          <% if (locals.searchQuery || locals.filterStatus) { %>
            <a href="/admin/orders" class="btn btn-secondary">
              <i class="bi bi-x-circle"></i> Clear
            </a>
          <% } %>
        </div>
      </form>
      <!-- Filter by Status -->
      <select class="form-select" id="statusFilter" name="status" style="width: 150px;">
        <option value="all" <%= (!query.status || query.status === 'all') ? 'selected' : '' %>>All Status</option>
        <option value="Pending" <%= query.status === 'Pending' ? 'selected' : '' %>>Pending</option>
        <option value="Processing" <%= query.status === 'Processing' ? 'selected' : '' %>>Processing</option>
        <option value="Shipped" <%= query.status === 'Shipped' ? 'selected' : '' %>>Shipped</option>
        <option value="Delivered" <%= query.status === 'Delivered' ? 'selected' : '' %>>Delivered</option>
        <option value="Return Requested" <%= query.status === 'Return Requested' ? 'selected' : '' %>>Return Requested</option>
        <option value="Return Approved" <%= query.status === 'Return Approved' ? 'selected' : '' %>>Return Approved</option>
        <option value="Return Rejected" <%= query.status === 'Return Rejected' ? 'selected' : '' %>>Return Rejected</option>
        <option value="Cancelled" <%= query.status === 'Cancelled' ? 'selected' : '' %>>Cancelled</option>
      </select>
    </div>
  </div>

  <div class="table-responsive">
    <table class="table table-hover table-bordered mt-3">
      <thead class="table-dark">
        <tr>
          <th scope="col">Order ID</th>
          <th scope="col">Customer</th>
          <th scope="col">Address</th>
          <th scope="col">Total Amount</th>
          <th scope="col">Order Date</th>
          <th scope="col">Status</th>
          <th scope="col">Payment Method</th>
          <th scope="col">Details</th>
        </tr>
      </thead>
      
      <tbody>
        <% if (locals.orders && locals.orders.length > 0) { %>
          <% orders.forEach(order => { %>
            <tr>
              <td>#<%= order._id.toString().slice(-8).toUpperCase() %></td>
              <td><%= order.user ? order.user.email : 'N/A' %></td>
              <td>
                <% if (order.shippingAddress) { %>
                  <button type="button" class="btn btn-sm btn-outline-primary address-btn" 
                          data-bs-toggle="modal" 
                          data-bs-target="#addressModal"
                          data-address-type="<%= order.shippingAddress.addressType || 'Home' %>"
                          data-full-name="<%= order.shippingAddress.fullName || '' %>"
                          data-phone="<%= order.shippingAddress.phone || '' %>"
                          data-address-line1="<%= order.shippingAddress.addressLine1 || '' %>"
                          data-address-line2="<%= order.shippingAddress.addressLine2 || '' %>"
                          data-city="<%= order.shippingAddress.city || '' %>"
                          data-state="<%= order.shippingAddress.state || '' %>"
                          data-pincode="<%= order.shippingAddress.pincode || '' %>">
                    <i class="bi bi-geo-alt"></i> View Address
                  </button>
                <% } else { %>
                  <span class="text-muted">No Address</span>
                <% } %>
              </td>
              <td>â‚¹<%= (order.totalAmount || order.total || 0).toFixed(2) %></td>
              <td><%= new Date(order.createdAt).toLocaleDateString('en-IN') %></td>
              <td>
                <span class="badge <%= getStatusBadgeClass(order.orderStatus) %> status-badge" 
                      style="cursor: pointer;"
                      data-order-id="<%= order._id %>"
                      data-status="<%= order.orderStatus %>"
                      data-cancel-reason="<%= order.cancelReason || '' %>"
                      data-return-reason="<%= order.returnReason || '' %>"
                      data-return-rejection-reason="<%= order.returnRejectionReason || '' %>"
                      data-payment-status="<%= order.paymentStatus %>"
                      data-payment-method="<%= order.paymentMethod %>">
                  <%= order.orderStatus %>
                </span>
              </td>
              <td><%= order.paymentMethod %></td>
              <td>
                <select class="form-select status-select" data-order-id="<%= order._id %>" <%= (order.paymentMethod === 'online' && order.paymentStatus !== 'Paid') ? 'disabled' : '' %>>
                  <option value="<%= order.orderStatus %>" selected><%= order.orderStatus %></option>
                  <% if (!(order.paymentMethod === 'online' && order.paymentStatus !== 'Paid')) { %>
                  <% const nextStatuses = getNextStatuses(order.orderStatus); %>
                  <% nextStatuses.forEach(status => { %>
                      <option value="<%= status %>"><%= status %></option>
                  <% }); %>
                  <% } %>
                </select>
              </td>
            </tr>
          <% }); %>
        <% } else { %>
          <tr>
            <td colspan="7" class="text-center">No orders found</td>
          </tr>
        <% } %>
      </tbody>
    </table>
  </div>

  <!-- Pagination -->
  <% if (locals.totalPages > 1) { %>
    <nav aria-label="Page navigation" class="mt-4">
      <ul class="pagination justify-content-center">
        <li class="page-item <%= currentPage === 1 ? 'disabled' : '' %>">
          <a class="page-link" href="?page=<%= currentPage - 1 %>" tabindex="-1">Previous</a>
        </li>
        <% for(let i = 1; i <= totalPages; i++) { %>
          <li class="page-item <%= currentPage === i ? 'active' : '' %>">
            <a class="page-link" href="?page=<%= i %>"><%= i %></a>
          </li>
        <% } %>
        <li class="page-item <%= currentPage === totalPages ? 'disabled' : '' %>">
          <a class="page-link" href="?page=<%= currentPage + 1 %>">Next</a>
        </li>
      </ul>
    </nav>
  <% } %>
</main>

<!-- Status Update Modal -->
<div class="modal fade" id="statusModal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Update Order Status</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <form id="statusUpdateForm">
          <input type="hidden" id="modalOrderId">
          <input type="hidden" id="modalCurrentStatus">
          
          <div class="mb-3">
            <label class="form-label">Current Status:</label>
            <span id="displayCurrentStatus" class="fw-bold"></span>
          </div>

          <div class="mb-3">
            <label for="newStatus" class="form-label">New Status:</label>
            <select class="form-select" id="newStatus" required>
              <option value="">Select Status</option>
            </select>
          </div>

          <div id="reasonContainer" class="mb-3 d-none">
            <label for="statusReason" class="form-label">Reason:</label>
            <textarea class="form-control" id="statusReason" rows="3" required></textarea>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-primary" id="confirmStatusUpdate">Update</button>
      </div>
    </div>
  </div>
</div>

<!-- Return Action Modal -->
<div class="modal fade" id="returnActionModal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Return Request Details</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <div class="mb-3">
          <strong>Return Reason:</strong>
          <p id="returnReasonText"></p>
        </div>
        <div class="mb-3">
          <strong>Comments:</strong>
          <p id="returnCommentsText"></p>
        </div>
        <div class="mb-3">
          <label for="adminComments" class="form-label">Admin Comments:</label>
          <textarea class="form-control" id="adminComments" rows="3"></textarea>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-danger" id="rejectReturn">Reject Return</button>
        <button type="button" class="btn btn-success" id="approveReturn">Approve Return</button>
      </div>
    </div>
  </div>
</div>

<!-- Address Modal -->
<div class="modal fade" id="addressModal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Shipping Address Details</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <div class="row">
          <div class="col-md-6">
            <div class="mb-3">
              <label class="form-label fw-bold">Address Type:</label>
              <p id="addressType" class="mb-0"></p>
            </div>
            <div class="mb-3">
              <label class="form-label fw-bold">Full Name:</label>
              <p id="fullName" class="mb-0"></p>
            </div>
            <div class="mb-3">
              <label class="form-label fw-bold">Phone:</label>
              <p id="phone" class="mb-0"></p>
            </div>
          </div>
          <div class="col-md-6">
            <div class="mb-3">
              <label class="form-label fw-bold">Address:</label>
              <p id="addressLine1" class="mb-1"></p>
              <p id="addressLine2" class="mb-1 text-muted"></p>
            </div>
            <div class="mb-3">
              <label class="form-label fw-bold">City:</label>
              <p id="city" class="mb-0"></p>
            </div>
            <div class="mb-3">
              <label class="form-label fw-bold">State:</label>
              <p id="state" class="mb-0"></p>
            </div>
            <div class="mb-3">
              <label class="form-label fw-bold">Pincode:</label>
              <p id="pincode" class="mb-0"></p>
            </div>
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

<%- include('../partials/admin/footer') %>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Search form handling
    const searchForm = document.getElementById('searchForm');
    const searchInput = document.getElementById('searchInput');
    const searchType = document.getElementById('searchType');
    const statusFilter = document.getElementById('statusFilter');
    const tableBody = document.querySelector('tbody');

    // Function to update table with new data
    function updateTable(orders) {
        if (!orders || !orders.length) {
            tableBody.innerHTML = `
                <tr>
                    <td colspan="8" class="text-center py-4">
                        <div class="text-muted">
                            <i class="fas fa-inbox fa-3x mb-3"></i>
                            <p>No orders found</p>
                        </div>
                    </td>
                </tr>
            `;
            return;
        }

        tableBody.innerHTML = orders.map(order => `
            <tr>
                <td>#${order._id.toString().slice(-8).toUpperCase()}</td>
                <td>${order.user ? order.user.email : 'N/A'}</td>
                <td>
                    ${order.shippingAddress ? `
                        <button type="button" class="btn btn-sm btn-outline-primary address-btn" 
                                data-bs-toggle="modal" 
                                data-bs-target="#addressModal"
                                data-address-type="${order.shippingAddress.addressType || 'Home'}"
                                data-full-name="${order.shippingAddress.fullName || ''}"
                                data-phone="${order.shippingAddress.phone || ''}"
                                data-address-line1="${order.shippingAddress.addressLine1 || ''}"
                                data-address-line2="${order.shippingAddress.addressLine2 || ''}"
                                data-city="${order.shippingAddress.city || ''}"
                                data-state="${order.shippingAddress.state || ''}"
                                data-pincode="${order.shippingAddress.pincode || ''}">
                            <i class="bi bi-geo-alt"></i> View Address
                        </button>
                    ` : '<span class="text-muted">No Address</span>'}
                </td>
                <td>â‚¹${(order.totalAmount || order.total || 0).toFixed(2)}</td>
                <td>${new Date(order.createdAt).toLocaleDateString('en-IN')}</td>
                <td>
                    <span class="badge ${getStatusBadgeClass(order.orderStatus)} status-badge"
                          style="cursor: pointer;"
                          data-order-id="${order._id}"
                          data-status="${order.orderStatus}"
                          data-cancel-reason="${order.cancelReason || ''}"
                          data-return-reason="${order.returnReason || ''}"
                          data-return-rejection-reason="${order.returnRejectionReason || ''}"
                          data-payment-status="${order.paymentStatus}"
                          data-payment-method="${order.paymentMethod}">
                        ${order.orderStatus}
                    </span>
                </td>
                <td>${order.paymentMethod}</td>
                <td>
                    <select class="form-select status-select" data-order-id="${order._id}" ${order.paymentMethod === 'online' && order.paymentStatus === 'Failed' ? 'disabled' : ''}>
                        <option value="${order.orderStatus}" selected>${order.orderStatus}</option>
                        ${!(order.paymentMethod === 'online' && order.paymentStatus === 'Failed') ? getNextStatuses(order.orderStatus).map(status => `<option value="${status}">${status}</option>`).join('') : ''}
                    </select>
                </td>
            </tr>
        `).join('');

        // Reattach event listeners
        attachEventListeners();
    }

    // Add status filter change handler
    statusFilter.addEventListener('change', function() {
        const selectedStatus = this.value;
        const currentUrl = new URL(window.location.href);
        
        if (selectedStatus === 'all') {
            currentUrl.searchParams.delete('status');
        } else {
            currentUrl.searchParams.set('status', selectedStatus);
        }
        
        // Reset to page 1 when filtering
        currentUrl.searchParams.delete('page');
        window.location.href = currentUrl.toString();
    });

    // Attach event listeners for other functionality
    function attachEventListeners() {
        // Status badge click handler
        document.querySelectorAll('.status-badge').forEach(badge => {
            badge.addEventListener('click', function() {
                const cancelReason = this.dataset.cancelReason;
                const returnReason = this.dataset.returnReason;
                const returnRejectionReason = this.dataset.returnRejectionReason;

                // Only show modal if there is a reason
                if (returnReason || cancelReason || returnRejectionReason) {
                    let reasonTitle = '';
                    let reasonText = '';
                    let reasonClass = '';
                    if (returnReason) {
                        reasonTitle = 'Return Reason';
                        reasonText = returnReason;
                        reasonClass = 'text-warning';
                    } else if (cancelReason) {
                        reasonTitle = 'Cancellation Reason';
                        reasonText = cancelReason;
                        reasonClass = 'text-danger';
                    } else if (returnRejectionReason) {
                        reasonTitle = 'Return Rejection Reason';
                        reasonText = returnRejectionReason;
                        reasonClass = 'text-danger';
                    }
                    Swal.fire({
                        title: reasonTitle,
                        html: `<p class='${reasonClass}' style='font-size:1.1em;'>${reasonText}</p>`,
                        confirmButtonText: 'Close'
                    });
                }
            });
        });

        // Status select change handler
        document.querySelectorAll('.status-select').forEach(select => {
            select.addEventListener('change', async function() {
                const orderId = this.dataset.orderId;
                const newStatus = this.value;
                const originalStatus = this.querySelector('option[selected]').value;

                try {
                    const response = await fetch(`/admin/orders/${orderId}/status`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json',
                            'Accept': 'application/json'
                        },
                        body: JSON.stringify({ status: newStatus })
                    });

                    if (!response.ok) {
                        throw new Error('Failed to update status');
                    }

                    const result = await response.json();

                    if (result.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Status Updated',
                            text: `Order status has been updated to ${newStatus}`,
                            showConfirmButton: false,
                            timer: 1500
                        });

                        // Refresh the orders list
                        statusFilter.dispatchEvent(new Event('change'));
                    } else {
                        throw new Error(result.message || 'Failed to update status');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Failed to update order status. Please try again.',
                        confirmButtonText: 'OK'
                    });
                    // Reset the select to original value
                    this.value = originalStatus;
                }
            });
        });
    }

    // Initial attachment of event listeners
    attachEventListeners();

    // Address modal event listener
    document.addEventListener('click', function(e) {
        if (e.target.closest('.address-btn')) {
            const button = e.target.closest('.address-btn');
            
            // Get address data from button attributes
            const addressType = button.getAttribute('data-address-type') || 'N/A';
            const fullName = button.getAttribute('data-full-name') || 'N/A';
            const phone = button.getAttribute('data-phone') || 'N/A';
            const addressLine1 = button.getAttribute('data-address-line1') || 'N/A';
            const addressLine2 = button.getAttribute('data-address-line2') || '';
            const city = button.getAttribute('data-city') || 'N/A';
            const state = button.getAttribute('data-state') || 'N/A';
            const pincode = button.getAttribute('data-pincode') || 'N/A';
            
            // Populate modal fields
            document.getElementById('addressType').textContent = addressType;
            document.getElementById('fullName').textContent = fullName;
            document.getElementById('phone').textContent = phone;
            document.getElementById('addressLine1').textContent = addressLine1;
            document.getElementById('addressLine2').textContent = addressLine2;
            document.getElementById('addressLine2').style.display = addressLine2 ? 'block' : 'none';
            document.getElementById('city').textContent = city;
            document.getElementById('state').textContent = state;
            document.getElementById('pincode').textContent = pincode;
        }
    });
});
</script>

<!-- Add SweetAlert2 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>