<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />
  <meta http-equiv="Pragma" content="no-cache" />
  <meta http-equiv="Expires" content="0" />
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
  <meta name="keywords" content="Derry World, Travel, Explore" />
  <meta name="description" content="Welcome to Derry World - Login to explore the best of everything!" />
  <meta name="author" content="Derry World" />
  <meta name="robots" content="noindex, nofollow">
  <link rel="shortcut icon" href="/images/favicon.png" type="image/png" />
  <title>Login - Derry World</title>

  <!-- CSS -->
  <link rel="stylesheet" href="/css/bootstrap.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
  <link rel="stylesheet" href="/css/style.css" />
  <link rel="stylesheet" href="/css/responsive.css" />

  <style>
    .login-container {
      background-color: #fff;
      color: #000;
      border-radius: 10px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      padding: 40px;
      max-width: 550px;
      margin: 50px auto;
      width: 95%;
    }

    .btn-login {
      background-color: #ffbe33;
      color: #000;
      border: none;
      padding: 15px;
      font-weight: bold;
      transition: all 0.3s ease;
    }

    .btn-login:hover {
      background-color: #e69c00;
      transform: translateY(-2px);
    }

    .btn-google {
      background-color: #fff;
      color: #000;
      border: 1px solid #ddd;
      padding: 15px;
      font-weight: 500;
      transition: all 0.3s ease;
    }

    .btn-google:hover {
      background-color: #f8f9fa;
      border-color: #ddd;
    }

    .btn-google img {
      width: 18px;
      height: 18px;
      margin-right: 10px;
    }

    .divider {
      text-align: center;
      margin: 20px 0;
      position: relative;
    }

    .divider::before,
    .divider::after {
      content: "";
      position: absolute;
      top: 50%;
      width: 45%;
      height: 1px;
      background-color: #ddd;
    }

    .divider::before {
      left: 0;
    }

    .divider::after {
      right: 0;
    }

    .divider span {
      background-color: #fff;
      padding: 0 10px;
      color: #6c757d;
      font-size: 14px;
    }

    .password-field {
      position: relative;
    }

    .password-toggle {
      position: absolute;
      right: 10px;
      top: 65%;
      transform: translateY(-50%);
      background: none;
      border: none;
      cursor: pointer;
      color: #5f6368;
    }

    .form-control {
      padding-right: 40px;
    }
  </style>
</head>

<body>
  <div class="hero_area">
    <div class="bg-box">
      <img src="/images/hero-bg.jpg" alt="Background Image" class="img-fluid" />
    </div>
    <header class="header_section">
      <div class="container">
        <nav class="navbar navbar-expand-lg custom_nav-container">
          <a class="navbar-brand" href="/">
            <span>Derry World</span>
          </a>
        </nav>
      </div>
    </header>
    <div class="container">
      <div class="row justify-content-center">
        <div class="col-lg-6 col-md-8 col-sm-12">
          <div class="login-container">
            <!-- Blocked user alert (will be shown via JavaScript if blocked=true in URL) -->
            <div id="blockedAlert" class="alert alert-warning" style="display: none;">
              <h4 class="alert-heading"><i class="fas fa-exclamation-triangle"></i> Account Access Restricted</h4>
              <p>Your account has been temporarily restricted. Please contact support for assistance.</p>
            </div>

            <h2 class="text-center mb-4">Login to Derry World</h2>

            <% if (typeof error !== 'undefined' && error) { %>
              <div class="alert alert-danger"><%= error %></div>
            <% } %>

            <% if (typeof success !== 'undefined' && success) { %>
              <div class="alert alert-success"><%= message %></div>
            <% } %>

            <form id="loginForm" method="POST">
              <div class="mb-3">
                <label for="email" class="form-label">Email address</label>
                <input type="email" class="form-control" id="email" name="email" required>
              </div>

              <div class="mb-3 password-field">
                <label for="password" class="form-label">Password</label>
                <input type="password" class="form-control" id="password" name="password" required>
                <button type="button" class="password-toggle" onclick="togglePasswordVisibility()">
                  <i id="eyeIcon" class="fas fa-eye"></i>
                </button>
              </div>

              <div class="mb-3">
                <a href="/forgot-password" class="forgot-password">Forgot Password?</a>
              </div>

              <button type="submit" class="btn btn-login btn-block">
                <span class="button-text">Login</span>
              </button>
            </form>

            <div class="divider"><span>or</span></div>

            <a href="/auth/google" class="btn btn-google w-100 mb-3">
              <img src="https://www.google.com/favicon.ico" alt="Google" />
              Continue with Google
            </a>

            <p class="text-center mt-3">
              Don't have an account? <a href="/register" class="text-primary">Sign up</a>
            </p>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Scripts -->
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

  <script>
    if (window.history && window.history.pushState) {
      window.history.replaceState(null, null, window.location.href);
      
      window.onpageshow = function(event) {
        if ((event.persisted || (window.performance && window.performance.navigation.type === 2)) && document.cookie.includes('userToken=')) {
          window.location.href = '/';
        }
      };
      
      window.onpopstate = function() {
        if (document.cookie.includes('userToken=')) {
          window.location.replace('/');
        } else {
          window.history.forward();
        }
      };
    }

    document.addEventListener('DOMContentLoaded', function() {
      document.forms[0]?.reset();
      
      if (typeof(Storage) !== 'undefined') {
        sessionStorage.clear();
        localStorage.removeItem('loginFormData');
      }
    });

    function togglePasswordVisibility() {
      const input = document.getElementById('password');
      const icon = document.getElementById('eyeIcon');
      if (input.type === 'password') {
        input.type = 'text';
        icon.classList.remove('fa-eye');
        icon.classList.add('fa-eye-slash');
      } else {
        input.type = 'password';
        icon.classList.remove('fa-eye-slash');
        icon.classList.add('fa-eye');
      }
    }

    // Handle form submission with AJAX
    document.addEventListener('DOMContentLoaded', function() {
      const loginForm = document.getElementById('loginForm');
      if (loginForm) {
        loginForm.addEventListener('submit', async function(e) {
          e.preventDefault();
          
          const submitButton = loginForm.querySelector('button[type="submit"]');
          const originalButtonText = submitButton.innerHTML;
          
          try {
            // Show loading state
            submitButton.disabled = true;
            submitButton.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Logging in...';
            
            // Convert form data to URL-encoded format
            const formData = new URLSearchParams();
            formData.append('email', document.getElementById('email').value);
            formData.append('password', document.getElementById('password').value);
            
            const response = await fetch('/login', {
              method: 'POST',
              body: formData,
              headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
                'Accept': 'application/json'
              },
              credentials: 'same-origin'
            });
            
            const result = await response.json();
            
            if (response.ok) {
              // Show success message and redirect
              await Swal.fire({
                icon: 'success',
                title: 'Success',
                text: result.message || 'Login successful!',
                timer: 1500,
                showConfirmButton: false
              });
              
              // Redirect to home or the specified URL
              window.location.href = result.redirect || '/';
            } else {
              throw new Error(result.message || 'Login failed');
            }
          } catch (error) {
            // Show error message
            await Swal.fire({
              icon: 'error',
              title: 'Login Failed',
              text: error.message || 'Invalid email or password',
              confirmButtonText: 'OK',
              confirmButtonColor: '#ffbe33'
            });
            
            // Re-enable the form
            submitButton.disabled = false;
            submitButton.innerHTML = originalButtonText;
          }
        });
      }
      
      // Handle any URL parameters for success/error messages
      const urlParams = new URLSearchParams(window.location.search);
      const success = urlParams.get('success');
      const blocked = urlParams.get('blocked');
      
      // Show blocked user alert if blocked=true in URL
      if (blocked === 'true') {
        document.getElementById('blockedAlert').style.display = 'block';
        // Clean up the URL
        const cleanUrl = window.location.pathname;
        window.history.replaceState({}, document.title, cleanUrl);
      }
      
      if (success) {
        Swal.fire({
          icon: 'success',
          title: 'Success',
          text: decodeURIComponent(success),
          timer: 1500,
          showConfirmButton: false
        });
        
        // Clean up the URL
        const cleanUrl = window.location.pathname;
        window.history.replaceState({}, document.title, cleanUrl);
      }
    });
  </script>
</body>
</html>
